#include <Keypad.h>
#include <LiquidCrystal.h>

// initialize the library by associating any needed LCD interface pin
// with the arduino pin number it is connected to
// bonjour 
const int rs = 8, en = 7, d4 = 5, d5 = 4, d6 = 3, d7 = 2;
const int LDRPin = A0;

const byte ROWS = 4;
const byte COLS = 4;

bool ACompleted = false;
bool BCompleted = false;

String code = "124";

#define LEDPIN 13;
  // Pin 13: Arduino has an LED connected on pin 13
  // Pin 11: Teensy 2.0 has the LED on pin 11
  // Pin  6: Teensy++ 2.0 has the LED on pin 6
  // Pin 13: Teensy 3.0 has the LED on pin 13

#define SENSORPIN 4;
int sensorState = 0, lastState=0;         // variable for reading the pushbutton status

int len;

LiquidCrystal lcd(rs, en, d4, d5, d6, d7);


char keys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};
    
byte rowPins[ROWS] = {22, 23, 24, 25};
byte colPins[COLS] = {26, 27, 28, 29};

Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS);





void resistorCubes() {
  bool Aloop = true;

  if (ACompleted) {
    lcd.setCursor(0, 0);
    lcd.print("Already Solved!");
    lcd.setCursor(0, 1);
    lcd.print("Move onto B");
  }
  
  else {
    while (Aloop) {
      String code = "124";
      String full; // what does this do?
      char key = keypad.getKey();
      if (key) {
        String temp = String(key);
    
        full += temp;
        Serial.print(key); 
        lcd.print(key);
        Serial.print(full);
        
        if (key == "#") {

          if (full == code) {
            Serial.print("\nYAY");
            lcd.print("Correct!");
            ACompleted = true;
          }

          else {
            lcd.print("Wrong!");
            full = "";
            Serial.print("\n");
            lcd.clear();
          }
        }
      
        if (key == "*") {
          // String Clength = full.length() - 1;
          // full[Clength] = '\0';
          full = "";
          Serial.print("\n");
          lcd.clear();
          Aloop = false;
          return;
        }

        len = full.length();
        if (len > 5) {
        full = "";
        Serial.print("\n");
        lcd.clear();
        }
      }
    }
  }
  
}

void resistorCubesCheck2() {
  if (ACompleted) {
    lcd.setCursor(0, 0);
    lcd.print("Already Solved!");
    lcd.setCursor(0, 1);
    lcd.print("Move onto B");
  }
}

void tensegrityCheck() {
  bool Bloop = true;

  if (BCompleted) {
    lcd.setCursor(0, 0);
    lcd.print("Already Solved!");
    lcd.setCursor(0, 1);
    lcd.print("Move onto A");
  }
  else {
  
    while (Aloop) {
      lcd.print("Press # to check if the puzzle is solved.")
      char key = keypad.getKey();
      
      if (key) {
        String temp = String(key);
    
        // full += temp;
        // Serial.print(key); 
        // lcd.print(key);
        // Serial.print(full);
        
        int LDRStatus = analogRead(LDRPin);
        
        if ((key == "#") && (LDRStatus <= 200)) {
          digitalWrite(LEDPIN, HIGH); 
          if (sensorState && !lastState) {
            Serial.println("Unbroken");
            lcd.print("YAYY");
            }
            
          lcd.print("Well done!");
          BCompleted = True;
          delay(20);
        
        if (key == "*") {
          return
        }
        
        }
        
        
  }
  
}







void setup() {
  pinMode(LDRPin, INPUT);
  pinMode(9, OUTPUT);
  // set up the LCD's number of columns and rows:
  lcd.begin(16, 2);
  // Print a message to the LCD.
  
  analogWrite(9, 90);
  // initialize the LED pin as an output:
  pinMode(LEDPIN, OUTPUT);      
  // initialize the sensor pin as an input:
  pinMode(SENSORPIN, INPUT);     
  digitalWrite(SENSORPIN, HIGH); // turn on the pullup
  
}






void loop() {
  digitalWrite(LEDPIN, LOW); 
  bool invalid = true;
  
  lcd.setCursor(0, 0);
  lcd.print("A: Spinning Cubes");
  lcd.setCursor(0,1);
  lcd.print("B: Duck Throne");

  char key = keypad.getKey();
  if (key == "A") {
    resistorCubes();
    }
  else if (key == "B") {
    tensegrityCheck();
      
      
  }
  else {
    lcd.print("Press A or B");
    }
  }
  // set the cursor to column 0, line 1
  // (note: line 1 is the second row, since counting begins with 0):
  //lcd.setCursor(0, 1);
  // print the number of seconds since reset:

  // lcd.print(LDRStatus);
  // Serial.print(LDRStatus);
  // delay(20);
  // lcd.clear();
  
  

}
